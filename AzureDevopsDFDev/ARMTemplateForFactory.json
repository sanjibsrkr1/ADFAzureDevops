{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "AzureDevopsDFDev"
		},
		"Dest_SQL_Conn_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Dest_SQL_Conn'"
		},
		"SQLConn_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQLConn'"
		},
		"AzureKeyVaultAccountkey_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://AzureDevopsKeyValultDev.vault.azure.net/"
		},
		"AzureKeyVaultSQL_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://AzureDevopsKeyValultDev.vault.azure.net/"
		},
		"AzureKeyVaultServicePrincipal_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://demo111.vault.azure.net/"
		},
		"AzureVaultWithKey_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "accountkeystoragescret"
		},
		"Conn_Service_Principal_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azuredevopsstoragedev.dfs.core.windows.net"
		},
		"Conn_Service_Principal_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "2c1a2940-1a7c-4259-bdb1-acb301e5958b"
		},
		"Conn_Service_Principal_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "d1e1fcd5-55e7-4af5-a70e-6b4c06682dd6"
		},
		"RestService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://graph.microsoft.com/v1.0/sites/803a5553-0a6f-4ba8-a665-d25ce13fbc19,86c0358f-0396-4ff0-a0f7-c3ef3d9b4204/lists/9040d9a9-b76e-478a-89bf-6f7971dc9d75/items?$Select=Id&$expand=fields($select=EmpNumber,empName)"
		},
		"adfIntegrationRunTime_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint": {
			"type": "string",
			"defaultValue": "adflearningdev.database.windows.net"
		},
		"adfIntegrationRunTime_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName": {
			"type": "string",
			"defaultValue": "adflearner"
		},
		"adfIntegrationRunTime_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword": {
			"type": "secureString"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Copy from REST connector into ADLS Gen2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Authorization": {
										"value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"quoteAllText": true
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "RestResource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "GetBearerToken",
						"description": "Use this Web activity to get bearer token",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Wait",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://login.microsoftonline.com/2c1a2940-1a7c-4259-bdb1-acb301e5958b/oauth2/v2.0/token",
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": "grant_type=client_credentials&client_id=e2a61ea8-b430-4e11-ad1c-7ec878af45f6&scope=https://graph.microsoft.com/.default&client_secret=?OZ=?jknr:iokBCIVSpAWKnHB7Pm39O0"
						}
					},
					{
						"name": "Wait",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 2
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"parameters": {
					"SinkContainer": {
						"type": "string",
						"defaultValue": "sharedpath"
					},
					"SinkDirectory": {
						"type": "string",
						"defaultValue": "source"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource')]",
				"[concat(variables('factoryId'), '/datasets/Json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Foreach_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select TABLE_NAME from INFORMATION_SCHEMA.tables",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "LookUp",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filter",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().Table_name,'emp')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Filter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Filtered_Table_Name",
							"value": {
								"value": "@activity('Filter').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach_Copy",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('Filtered_Table_Name')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Dynamic_Dataset_Source",
											"type": "DatasetReference",
											"parameters": {
												"Source_Table_Name": "@item().Table_Name"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Dynamic_Dataset_Dest",
											"type": "DatasetReference",
											"parameters": {
												"Dest_Table_Name": "@item().Table_Name"
											}
										}
									]
								}
							]
						}
					}
				],
				"variables": {
					"Filtered_Table_Name": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LookUp')]",
				"[concat(variables('factoryId'), '/datasets/Dynamic_Dataset_Source')]",
				"[concat(variables('factoryId'), '/datasets/Dynamic_Dataset_Dest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/My_First_Copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EmpID",
											"type": "String"
										},
										"sink": {
											"name": "Empid",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Datalake_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Wait",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Datalake_Source')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/wait')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLConn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Emp"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLConn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Datalake_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureVaultWithKey",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EmpData (2).csv",
						"folderPath": "Source",
						"container": "sharedpath"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureVaultWithKey')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dynamic_Dataset_Dest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dest_SQL_Conn",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Dest_Table_Name": {
						"type": "string",
						"defaultValue": "emp"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"table": {
						"value": "@dataset().Dest_Table_Name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Dest_SQL_Conn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dynamic_Dataset_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLConn",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Source_Table_Name": {
						"type": "string",
						"defaultValue": "emp"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"table": {
						"value": "@dataset().Source_Table_Name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLConn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureVaultWithKey",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Json",
						"folderPath": "Source",
						"container": "sharedpath"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"@odata.context": {
							"type": "string"
						},
						"value": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"@odata.etag": {
										"type": "string"
									},
									"id": {
										"type": "string"
									},
									"fields@odata.context": {
										"type": "string"
									},
									"fields": {
										"type": "object",
										"properties": {
											"@odata.etag": {
												"type": "string"
											},
											"EmpName": {
												"type": "string"
											},
											"EmpNumber": {
												"type": "number"
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureVaultWithKey')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LookUp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLConn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLConn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVaultAccountkey')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVaultAccountkey_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVaultSQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVaultSQL_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVaultServicePrincipal')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVaultServicePrincipal_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureVaultWithKey')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVaultAccountkey",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('AzureVaultWithKey_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVaultAccountkey')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Conn_Service_Principal')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Conn_Service_Principal_properties_typeProperties_url')]",
					"tenant": "[parameters('Conn_Service_Principal_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('Conn_Service_Principal_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVaultServicePrincipal",
							"type": "LinkedServiceReference"
						},
						"secretName": "secretserviceprincipal"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVaultServicePrincipal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dest_SQL_Conn')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Dest_SQL_Conn_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVaultSQL",
							"type": "LinkedServiceReference"
						},
						"secretName": "secretpassword"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVaultSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLConn')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SQLConn_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfIntegrationRunTime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"nodeSize": "Standard_D8_v3",
						"numberOfNodes": 2,
						"maxParallelExecutionsPerNode": 8
					},
					"ssisProperties": {
						"catalogInfo": {
							"catalogServerEndpoint": "[parameters('adfIntegrationRunTime_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint')]",
							"catalogAdminUserName": "[parameters('adfIntegrationRunTime_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName')]",
							"catalogAdminPassword": {
								"type": "SecureString",
								"value": "[parameters('adfIntegrationRunTime_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword')]"
							},
							"catalogPricingTier": "S1"
						},
						"edition": "Standard",
						"licenseType": "LicenseIncluded"
					}
				}
			},
			"dependsOn": []
		}
	]
}